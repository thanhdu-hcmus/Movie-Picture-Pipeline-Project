name: Backend Continuous Deployment

on:
  push:
    branches: [ "main" ]
    paths:
      - 'starter/backend/**'  # Trigger only if files in the backend directory change
  workflow_dispatch:

env:
  PYTHON_VERSION: 3.12
  IMAGE_NAME: backend
  IMAGE_TAG: latest
  BACKEND_ECR: 468154422986.dkr.ecr.us-east-1.amazonaws.com
  AWS_REGION: us-east-1
jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./starter/backend
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Setup Python Environment
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv flake8
          pipenv install
  
      - name: Run Lint
        run: pipenv run lint

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./starter/backend
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      
      - name: Setup Python Environment
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: Install Testing Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv pytest
          pipenv install
      
      - name: Run Backend Tests
        run: pipenv run test

  build-deploy:
    name: Build and Deploy
    needs: [lint, test]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./starter/backend
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials for Deployment
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
        with:
          aws-region: ${{ env.AWS_REGION }}

      - name: Build and Push Docker Image
        run: |
          aws eks update-kubeconfig --name cluster --region ${{ env.AWS_REGION }}
          docker build -t ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .
          docker image ls
          docker tag ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} ${{ env.BACKEND_ECR }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.BACKEND_ECR }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Deploy to AWS EKS
        run: |
          aws eks update-kubeconfig --name cluster --region ${{ env.AWS_REGION }}
          cd k8s
          kustomize edit set image backend=${{ env.BACKEND_ECR }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          kustomize build | kubectl apply -f -
          kubectl get svc
          kubectl get deployment